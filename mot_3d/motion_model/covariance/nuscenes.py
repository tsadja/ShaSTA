import numpy as np, json, os


class NuCovariance:
    def __init__(self, name):
        self.name = name
        self.path = 'preprocessing/nuscenes_data/nusc_stats'

        P = json.load(open(os.path.join(self.path, 'P_cp_{:}.json'.format(name)), 'r'))
        Q = json.load(open(os.path.join(self.path, 'Q_cp_{:}.json'.format(name)), 'r'))
        R = json.load(open(os.path.join(self.path, 'R_cp_{:}.json'.format(name)), 'r'))

        self.obj_types = 'car,bus,trailer,truck,pedestrian,bicycle,motorcycle'.split(',')
        self.P = {obj_type: np.diag(P[obj_type]) for obj_type in self.obj_types}
        self.Q = {obj_type: np.diag(Q[obj_type]) for obj_type in self.obj_types}
        self.R = {obj_type: np.diag(R[obj_type]) for obj_type in self.obj_types}
        return


# class NuCovariance:
#     def __init__(self):
#         self.P = np.eye(11)
#         self.Q = np.eye(11)
#         self.R = np.eye(11)

#         self.obj_types = [
#             'bicycle',
#             'bus',
#             'car',
#             'motorcycle',
#             'pedestrian',
#             'trailer',
#             'truck'
#         ]

#         P = {
#             'bicycle':    [0.05390982, 0.05039431, 0.01863044, 1.29464435, 0.02713823, 0.01169572, 0.01295084, 0.04560422, 0.04097244, 0.01725477, 1.21635902],
#             'bus':        [0.17546469, 0.13818929, 0.05947248, 0.1979503 , 0.78867322, 0.05507407, 0.06684149, 0.13263319, 0.11508148, 0.05033665, 0.22529652],
#             'car':        [0.08900372, 0.09412005, 0.03265469, 1.00535696, 0.10912802, 0.02359175, 0.02455134, 0.08120681, 0.08224643, 0.02266425, 0.99492726],
#             'motorcycle': [0.04052819, 0.0398904 , 0.01511711, 1.06442726, 0.03291016, 0.00957574, 0.0111605 , 0.0437039 , 0.04327734, 0.01465631, 1.30414345],
#             'pedestrian': [0.03855275, 0.0377111 , 0.02482115, 2.0751833 , 0.02286483, 0.0136347 , 0.0203149 , 0.04237008, 0.04092393, 0.01482923, 2.0059979 ],
#             'trailer':    [0.23228021, 0.22229261, 0.07006275, 1.05163481, 1.37451601, 0.06354783, 0.10500918, 0.2138643 , 0.19625241, 0.05231335, 0.97082174],
#             'truck':      [0.14862173, 0.1444596 , 0.05417157, 0.73122169, 0.69387238, 0.05484365, 0.07748085, 0.10683797, 0.10248689, 0.0378078 , 0.76188901]
#         }
  
#         Q = {
#             'bicycle':    [1.98881347e-02, 1.36552276e-02, 5.10175742e-03, 1.33430252e-01, 0, 0, 0, 1.98881347e-02, 1.36552276e-02, 5.10175742e-03, 1.33430252e-01],
#             'bus':        [1.17729925e-01, 8.84659079e-02, 1.17616440e-02, 2.09050032e-01, 0, 0, 0, 1.17729925e-01, 8.84659079e-02, 1.17616440e-02, 2.09050032e-01],
#             'car':        [1.58918523e-01, 1.24935318e-01, 5.35573165e-03, 9.22800791e-02, 0, 0, 0, 1.58918523e-01, 1.24935318e-01, 5.35573165e-03, 9.22800791e-02],
#             'motorcycle': [3.23647590e-02, 3.86650974e-02, 5.47421635e-03, 2.34967407e-01, 0, 0, 0, 3.23647590e-02, 3.86650974e-02, 5.47421635e-03, 2.34967407e-01],
#             'pedestrian': [3.34814566e-02, 2.47354921e-02, 5.94592529e-03, 4.24962535e-01, 0, 0, 0, 3.34814566e-02, 2.47354921e-02, 5.94592529e-03, 4.24962535e-01],
#             'trailer':    [4.19985099e-02, 3.68661552e-02, 1.19415050e-02, 5.63166240e-02, 0, 0, 0, 4.19985099e-02, 3.68661552e-02, 1.19415050e-02, 5.63166240e-02],
#             'truck':      [9.45275998e-02, 9.45620374e-02, 8.38061721e-03, 1.41680460e-01, 0, 0, 0, 9.45275998e-02, 9.45620374e-02, 8.38061721e-03, 1.41680460e-01]
#         }
  
#         R = {
#             'bicycle':    [0.05390982, 0.05039431, 0.01863044, 1.29464435, 0.02713823, 0.01169572, 0.01295084],
#             'bus':        [0.17546469, 0.13818929, 0.05947248, 0.1979503 , 0.78867322, 0.05507407, 0.06684149],
#             'car':        [0.08900372, 0.09412005, 0.03265469, 1.00535696, 0.10912802, 0.02359175, 0.02455134],
#             'motorcycle': [0.04052819, 0.0398904 , 0.01511711, 1.06442726, 0.03291016, 0.00957574, 0.0111605 ],
#             'pedestrian': [0.03855275, 0.0377111 , 0.02482115, 2.0751833 , 0.02286483, 0.0136347 , 0.0203149 ],
#             'trailer':    [0.23228021, 0.22229261, 0.07006275, 1.05163481, 1.37451601, 0.06354783, 0.10500918],
#             'truck':      [0.14862173, 0.1444596 , 0.05417157, 0.73122169, 0.69387238, 0.05484365, 0.07748085]
#         }

#         self.P = {obj_type: np.diag(P[obj_type]) for obj_type in self.obj_types}
#         self.Q = {obj_type: np.diag(Q[obj_type]) for obj_type in self.obj_types}
#         self.R = {obj_type: np.diag(R[obj_type]) for obj_type in self.obj_types}
#         return
    
